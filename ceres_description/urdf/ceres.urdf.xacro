<?xml version="1.0"?>
<robot
  xmlns:xacro="http://ros.org/wiki/xacro"
  xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
  xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
  xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
  name="ceres">

  <xacro:include filename="$(find ceres_description)/urdf/common.xacro" />
  <xacro:include filename="$(find ceres_description)/urdf/imu.gazebo.urdf.xacro" />
  <xacro:include filename="$(find sick_tim)/urdf/sick_tim.urdf.xacro" />
  <xacro:include filename="$(find ceres_description)/urdf/wheel.urdf.xacro" />
  <!-- <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro" /> -->

  <xacro:property name="M_PI" value="3.14159265359"/>
  
  <xacro:property name="imu_stdev" value="0.0001" />
  
  <xacro:property name="body_height" value="0.15"/>
  <xacro:property name="body_length" value="0.38"/>
  <xacro:property name="body_width" value="0.32"/>
  
  <xacro:property name="axis_front" value="0.14"/>
  <xacro:property name="axis_back" value="-0.14"/>
  
  <xacro:property name="wheel_thickness" value="0.08"/>
  <xacro:property name="wheel_body_offset" value="${wheel_thickness/2 + 0.035}"/>
  <xacro:property name="wheel_radius" value="0.125"/>
  <xacro:property name="axis_height" value="-0.03"/>
  <xacro:property name="axis_right" value="${-body_width/2 - wheel_body_offset}"/>
  <xacro:property name="axis_left" value="${body_width/2 + wheel_body_offset}"/>
  <xacro:property name="axis_length" value="${body_width + 2 * wheel_body_offset}" />
  <xacro:property name="turning_adaptation" value="2.95" />

  <xacro:property name="body_mass" value="25.0"/>
  <xacro:property name="wheel_mass" value="5.0"/>

  <xacro:property name="imu_width" value="0.036"/>
  <xacro:property name="imu_length" value="0.038"/>
  <xacro:property name="imu_height" value="0.012"/>

  <xacro:property name="imu_offset_x" value="0"/>
  <xacro:property name="imu_offset_y" value="0"/>
  <xacro:property name="imu_offset_z" value="${- body_height/2 + 0.005 + 0.007}"/>
  
  <xacro:property name="em_body_length" value="0.11"/>
  <xacro:property name="em_body_width" value="0.04"/>
  <xacro:property name="em_body_height" value="0.03"/>
  
  <xacro:property name="em_button_radius" value="0.0125"/>
  <xacro:property name="em_button_depth" value="0.02" />
 
  <link name="base_footprint"/>
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
      <material name="silver" >
        <color rgba="0.5 0.5 0.5 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
    </collision>
    <xacro:box_inertial
      x="${body_length}"
      y="${body_width}"
      z="${body_height}"
      mass="${body_mass}"/>
  </link>
  
  <joint name="base_footprint_to_base_joint" type="fixed">
    <origin xyz="0 0 ${wheel_radius - axis_height}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>

  <xacro:wheel name="left_front_wheel" parent="base_link">
    <origin xyz="${axis_front} ${axis_left} ${axis_height}" rpy="0 0 0"/>
  </xacro:wheel>

  <xacro:wheel name="left_rear_wheel" parent="base_link">
    <origin xyz="${axis_back} ${axis_left} ${axis_height}" rpy="0 0 0" />
  </xacro:wheel>
  
  <xacro:wheel name="right_front_wheel" parent="base_link">
    <origin xyz="${axis_front} ${axis_right} ${axis_height}" rpy="0 0 0"/>
  </xacro:wheel>

  <xacro:wheel name="right_rear_wheel" parent="base_link">
    <origin xyz="${axis_back} ${axis_right} ${axis_height}" rpy="0 0 0" />
  </xacro:wheel>

  <xacro:sick_tim551 name="laser" ros_topic="/scan" />
  
  <joint name="sick_to_base_joint" type="fixed">
    <parent link="base_link" />
    <child link="laser_mount_link" />
    <origin xyz="${body_length/2 - 0.05} 0 ${body_height/2 + 0.05}"/>
  </joint>
  <!-- <xacro:VLP-16 topic="/velodyne/points" gpu="true">
    <origin xyz="${body_length/2 - 0.05} 0 ${body_height/2}"/>
  </xacro:VLP-16> -->
  
  <link name="imu">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${imu_length} ${imu_width} ${imu_height}"/>
      </geometry>
      <material name="white" >
        <color rgba="0.8 0.8 0.8 1" />
      </material>
    </visual>
  </link>
  
  <joint name="imu_to_base_joint" type="fixed">
    <parent link="base_link" />
    <child link="imu" />
    <origin xyz=" ${imu_offset_x} ${imu_offset_y} ${imu_offset_z}" rpy="${M_PI} 0 ${M_PI/2.0}" />
    <!-- <origin xyz=" ${imu_offset_x} ${imu_offset_y} ${imu_offset_z}" rpy="0 0 0" /> -->
  </joint>
  
  <!-- inertial measurement unit for gazebo -->
  <xacro:imu_gazebo link="imu" imu_topic="/imu/data_raw" update_rate="50.0" stdev="${imu_stdev}" />

  <gazebo>
    <plugin name='skid_steer_drive' filename='libgazebo_ros_diff_drive.so'>
      
      <num_wheel_pairs>2</num_wheel_pairs>
      <!-- wheels0 -->
        <left_joint>left_front_wheel</left_joint>
        <right_joint>right_front_wheel</right_joint>

        <!-- wheels1-->
        <left_joint>left_rear_wheel</left_joint>
        <right_joint>right_rear_wheel</right_joint>

         <!-- kinematics -->
        <wheel_separation>${axis_length}</wheel_separation>
        <wheel_separation>${axis_length}</wheel_separation>
  

        <wheel_diameter>${2*wheel_radius}</wheel_diameter>
        <wheel_diameter>${2*wheel_radius}</wheel_diameter>

        <!-- limits -->
        <max_wheel_torque>5000</max_wheel_torque>
        <max_wheel_acceleration>3.0</max_wheel_acceleration>

        <!-- Convariance -->
        <covariance_x>0.001</covariance_x>
        <covariance_y>0.001</covariance_y>
        <covariance_yaw>0.001</covariance_yaw>
        
        <!-- output -->
        <publish_odom>true</publish_odom>
        <publish_odom_tf>false</publish_odom_tf>
        <publish_wheel_tf>true</publish_wheel_tf>

        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>base_link</robot_base_frame>
    </plugin>
  </gazebo>

</robot>
